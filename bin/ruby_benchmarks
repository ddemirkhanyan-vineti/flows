#!/usr/bin/env ruby
# rubocop:disable all

require 'bundler/setup'
require 'benchmark/ips'

print_header = lambda do |text|
  puts '#' * 50
  puts "# #{text}"
  puts '#' * 50
end

# --------------------------------------------------
print_header.call('different method execution ways')

class OneMethod
  def meth
    :ok
  end
end

one_method = OneMethod.new
method_obj = one_method.method(:meth)

Benchmark.ips do |b|
  b.report('instance.meth') { one_method.meth }
  b.report('instance.public_send(:meth)') { one_method.public_send(:meth) }
  b.report('instance.send(:meth)') { one_method.send(:meth) }
  b.report('instance.method(:meth).call') { method_obj.call }

  b.compare!
end

# --------------------------------------------------
print_header.call('Data structures creation (fill 3 fields with rand) calculation sum of 3 fields')

TestStruct = Struct.new(:a, :b, :c, keyword_init: true)

class CustomStruct
  attr_reader :a, :b, :c

  def initialize(a:, b:, c:)
    @a = a
    @b = b
    @c = c
  end
end

Benchmark.ips do |b|
  b.report('Hash') do
    x = {
      a: rand(10),
      b: rand(10),
      c: rand(10)
    }

    x[:a] + x[:b] + x[:c]
  end

  b.report('Struct') do
    x = TestStruct.new(
      a: rand(10),
      b: rand(10),
      c: rand(10)
    )

    x.a + x.b + x.c
  end

  b.report('Custom Class') do
    x = CustomStruct.new(
      a: rand(10),
      b: rand(10),
      c: rand(10)
    )

    x.a + x.b + x.c
  end

  b.compare!
end
